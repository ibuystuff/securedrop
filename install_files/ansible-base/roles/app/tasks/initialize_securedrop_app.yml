---
- name: Install SecureDrop Application Server dependencies.
  apt:
    pkg: "{{ item }}"
    state: latest
  with_items: "{{ appserver_dependencies }}"
  tags:
    - apt

- name: Copy the SecureDrop Application GPG public key to the Application Server.
  copy:
    src: "{{ securedrop_app_gpg_public_key }}"
    dest: "{{ securedrop_data }}/"
  tags:
    - securedrop_config

- name: Import the SecureDrop Application GPG public key to the Application Server keyring.
  # multiline format for command module, since this is a long command
  command: >
    su -s /bin/bash -c 'gpg
    --homedir {{ securedrop_data }}/keys
    --import {{ securedrop_data }}/{{ securedrop_app_gpg_public_key }}' {{ securedrop_user }}
  register: gpg_app_key_import
  changed_when: "'imported: 1' in gpg_app_key_import.stderr"
  tags:
    - gpg
    - securedrop_config

- name: Migrate and populate the config files
  command: >
    /var/www/securedrop/populate_config.py \
      --journalist-key-fpr {{ journalist_gpg_fpr }} \
      --supported-locales {{ securedrop_supported_locales }} \
      --default-locale {{ securedrop_default_locale }}
  tags:
    - securedrop_config

- name: Check whether sqlite database exists.
  stat:
    path: "{{ securedrop_data }}/db.sqlite"
  register: db
  # Read-only task, so don't report changed.
  changed_when: false
  tags:
    - database
    - securedrop_config

- name: Initialize sqlite database.
  shell: './manage.py init-db --user {{ securedrop_user }}'
  args:
    chdir: '{{ securedrop_code }}'
  when: not db.stat.exists
  tags:
    - database
    - securedrop_config
